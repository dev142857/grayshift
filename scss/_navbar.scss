// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between;
  padding-top: $navbar-padding-y;
  padding-bottom: $navbar-padding-y;
  background-color: $navbar-bg;
  @include box-shadow($navbar-box-shadow);

  > :is(.container, .container-fluid) {
    display: flex;
    flex-wrap: inherit;
    align-items: center;
    justify-content: space-between;
  }

  .dropdown-menu {
    position: static;
    margin-top: $navbar-dropdown-spacer;
  }
}

// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

.navbar-nav {
  display: flex;
  flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
  padding-left: 0;
  margin-top: $navbar-nav-spacer;
  list-style: none;

  .nav-item + .nav-item {
    margin-top: $navbar-nav-item-spacer;
  }

  .nav-link:is(.active, .show) {
    color: $navbar-nav-link-color;
  }
}

// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Grayshift JavaScript plugin.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.navbar-collapse {
  flex-basis: 100%;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;
}

// Button for toggling the navbar when in its collapsed state
.navbar-toggler {
  padding: 0; // remove default button style
  background-color: transparent; // remove default button style
  border: 0; // remove default button style

  &:focus {
    outline: 0;
  }
}

// scss-docs-start navbar-expand-loop
// Generate series of `.navbar-expand` responsive classes for configuring
// where your navbar collapses.
@each $breakpoint in map-keys($grid-breakpoints) {
  $next: breakpoint-next($breakpoint, $grid-breakpoints);
  $prefix: breakpoint-prefix($next, $grid-breakpoints);

  .#{$prefix}navbar-expand {
    @include media-breakpoint-up($next) {
      flex-wrap: nowrap;

      .dropdown-menu {
        position: absolute;
      }

      .navbar-nav {
        flex-direction: row;
        margin-top: 0;

        .nav-item + .nav-item {
          margin-top: 0;
          margin-left: $navbar-nav-spacer;
        }
      }

      .navbar-collapse {
        display: flex;
        flex-basis: auto;
      }

      .navbar-toggler {
        display: none;
      }

      .form-control {
        max-width: $navbar-input-max-width;
      }
    }
  }
}
